name: "Helm Kubeconform (with schema support)"
description: "Generate manifests with `helm template` and run `kubeconform` on the results"
author: "Shiv Jha-Mathur"
inputs:
  strict:
    description: "Whether to run Kubeconform in strict mode"
    default: "true"
    required: false
  additionalSchemaPaths:
    description: "Newline-separated list of paths to look for schemas under, including filename template"
    default: ""
    required: false
  chartsDirectory:
    description: "Directory to search for chart directories under"
    default: "charts"
    required: true
  regexSkipDir:
    description: "Skip search in directories matching this regex"
    default: "\\.git"
    required: false
  kubernetesVersion:
    description: "Version of Kubernetes to validate manifests against"
    default: "master"
    required: false
  logLevel:
    description: "Only show log messages at or above level (defined by zerolog)"
    default: "debug"
    required: false
  logJson:
    description: "Produce JSON log messages"
    default: "false"
    required: false
runs:
  using: "docker"
  image: "Dockerfile"
  env:
    # ${{ github }} and (obviously) ${{ env }} aren’t available here, so it isn’t possible to
    # specify a path relative to ${{ github.workspace }} or $GITHUB_WORKSPACE, but
    # `actions/checkout` will just use the current directory, which the runner will point the Docker
    # container at as well, and the Go code will resolve paths against that base directory
    KUBECONFORM_STRICT: "${{ inputs.strict }}"
    ADDITIONAL_SCHEMA_PATHS: "${{ inputs.additionalSchemaPaths }}"
    CHARTS_DIRECTORY: "${{ inputs.chartsDirectory }}"
    HELM_UPDATE_DEPENDENCIES: "true"
    KUBERNETES_VERSION: "${{ inputs.kubernetesVersion }}"
    LOG_LEVEL: "${{ inputs.logLevel }}"
    LOG_JSON: "${{ inputs.logJson }}"
  args: []
